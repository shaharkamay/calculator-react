{"version":3,"sources":["components/Button.js","components/Calculator.js","components/main/Main.js","App.js","index.js"],"names":["Button","props","id","this","className","onClick","value","React","Component","Calculator","display","char","expression","state","length","isNaN","console","log","substr","reverseExpArr","split","reverse","index","findIndex","cleanZeros","answer","setState","calculate","eval","toString","str","replace","map","num","i","numsToWords","toWords","Main","App","ReactDOM","render","document","getElementById"],"mappings":"2LAEMA,E,kDACF,WAAYC,GAAQ,uCACVA,G,0CAEV,WAAU,IAAD,OACL,OACI,wBAAQC,GAAIC,KAAKF,MAAMC,GAAIE,UAAWD,KAAKF,MAAMG,UAAWC,QAAS,kBAAM,EAAKJ,MAAMI,QAAQ,EAAKJ,MAAMK,QAAzG,SAAkHH,KAAKF,MAAMK,Y,GANpHC,IAAMC,WAWZR,O,+iDCPTS,W,sXACF,oBAAYR,OAAQ,IAAD,sLACf,uBAAMA,OADS,MAInBS,QAAU,SAACC,GACP,IAAIC,EAAa,MAAKC,MAAMD,WAC5B,GAAY,OAATD,GAIH,GAAY,MAATA,GAC0C,MAAtCC,EAAWA,EAAWE,OAAS,GADtC,CAGA,GAAY,OAATH,GAA0B,MAATA,GAAgBI,MAAMJ,GAAO,CAC7C,GAAyC,MAAtCC,EAAWA,EAAWE,OAAS,GAAY,OAC9C,GAAY,MAATH,GAAsC,IAAtBC,EAAWE,OAAc,OAC5C,KAC0C,MAAtCF,EAAWA,EAAWE,OAAS,IACnB,MAATH,GACAI,MAAMH,EAAWA,EAAWE,OAAS,KAEpCE,QAAQC,IAAIL,GACZA,EAAaA,EAAWM,OAAO,EAAGN,EAAWE,OAAS,GAGlE,GAAY,MAATH,EAAc,CACb,GAAyC,MAAtCC,EAAWA,EAAWE,OAAS,GAAY,OAC9C,IAAMK,EAAgBP,EAAWQ,MAAM,IAAIC,UACrCC,EAAQH,EAAcI,UAAUR,OACtC,GAA4B,MAAzBI,EAAcG,GAAgB,OAGrCV,EAAa,MAAKY,WAAWZ,EAAaD,GAC1C,IAAMc,EAAS,MAAKD,WAAW,MAAKX,MAAMY,OAASd,GAEvC,MAATA,GAAgBI,MAAMJ,GAErB,MAAKe,SAAS,CAAEd,aAAYa,OAAQ,KAIxC,MAAKC,SAAS,CAAEd,aAAYa,iBAlCxB,MAAKC,SAAS,CAAEd,WAAY,GAAIa,OAAQ,MAP7B,MA2CnBE,UAAY,WAC4B,IAAjC,MAAKd,MAAMD,WAAWE,QACzB,MAAKY,SAAS,CAAEd,WAAYgB,KAAK,MAAKf,MAAMD,YAAYiB,WAAYJ,OAAQG,KAAK,MAAKf,MAAMD,YAAYiB,cA7CzF,MAgDnBL,WAAa,SAAAM,GAAG,OAAIA,EAAIC,QAAQ,UAAW,OA9CvC,MAAKlB,MAAQ,CAAED,WAAY,GAAIa,OAAQ,IAFxB,M,4LAkDnB,WAAU,IAAD,OACL,OACI,mEAAKrB,UAAU,2BAAf,UACI,mEAAKF,GAAG,oBAAR,UACI,kEAAKA,GAAG,MAAR,SAAeC,KAAKU,MAAMD,YAAc,MACxC,kEAAKV,GAAG,UAAR,SAAmBC,KAAKU,MAAMY,QAAU,SAE5C,2DAAC,uCAAD,CAAQvB,GAAG,QAAQI,MAAM,KAAKD,QAASF,KAAKO,UAC5C,2DAAC,uCAAD,CAAQR,GAAG,SAASE,UAAU,OAAOE,MAAM,IAAID,QAASF,KAAKO,UAC7D,2DAAC,uCAAD,CAAQR,GAAG,WAAWE,UAAU,OAAOE,MAAM,IAAID,QAASF,KAAKO,UAC9D,CAAC,EAAG,EAAG,GAAGsB,KAAI,SAACC,EAAKC,GAAN,OAAY,2DAAC,uCAAD,CAAQhC,GAAIiC,uDAAYC,QAAQH,GAAM3B,MAAO2B,EAAe5B,QAAS,EAAKK,SAAnBuB,MAClF,2DAAC,uCAAD,CAAQ/B,GAAG,WAAWE,UAAU,OAAOE,MAAM,IAAID,QAASF,KAAKO,UAC9D,CAAC,EAAG,EAAG,GAAGsB,KAAI,SAACC,EAAKC,GAAN,OAAY,2DAAC,uCAAD,CAAQhC,GAAIiC,uDAAYC,QAAQH,GAAM3B,MAAO2B,EAAe5B,QAAS,EAAKK,SAAnBuB,MAClF,2DAAC,uCAAD,CAAQ/B,GAAG,MAAME,UAAU,OAAOE,MAAM,IAAID,QAASF,KAAKO,UACzD,CAAC,EAAG,EAAG,GAAGsB,KAAI,SAACC,EAAKC,GAAN,OAAY,2DAAC,uCAAD,CAAQhC,GAAIiC,uDAAYC,QAAQH,GAAM3B,MAAO2B,EAAe5B,QAAS,EAAKK,SAAnBuB,MAClF,2DAAC,uCAAD,CAAQ/B,GAAG,SAASI,MAAM,IAAID,QAASF,KAAKwB,YAC5C,2DAAC,uCAAD,CAAQzB,GAAIiC,uDAAYC,QAAQ,GAAI9B,MAAO,EAAWD,QAASF,KAAKO,SAAjB,GACnD,2DAAC,uCAAD,CAAQR,GAAG,UAAUI,MAAM,IAAID,QAASF,KAAKO,iB,YApEpCH,6CAAMC,WA0EhBC,kC,oJC7ET4B,E,4JACF,WACI,OACI,qBAAKjC,UAAU,OAAf,SACI,cAACK,EAAA,EAAD,U,GAJGF,IAAMC,WASV6B,ICPTC,E,4JACF,WACI,OACI,8BACI,cAAC,EAAD,U,GAJE/B,IAAMC,WAST8B,I,cCNfC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9ca2ccbc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <button id={this.props.id} className={this.props.className} onClick={() => this.props.onClick(this.props.value)}>{this.props.value}</button>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Button;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from './Button';\r\nimport numsToWords from 'number-to-words';\r\nimport { getByDisplayValue } from '@testing-library/dom';\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { expression: '', answer: '' };\r\n    }\r\n    display = (char) => {\r\n        let expression = this.state.expression;\r\n        if(char === 'AC') {\r\n            this.setState({ expression: '', answer: '' })\r\n            return;\r\n        }\r\n        if(char === '-') {\r\n            if(expression[expression.length - 1] === '-') return;\r\n        }\r\n        if(char !== 'AC' && char !== '.' && isNaN(char)) {\r\n            if(expression[expression.length - 1] === '.') return;\r\n            if(char !== '-' && expression.length === 0) return;\r\n            while(\r\n                expression[expression.length - 1] !== '.' \r\n                && char !== '-'\r\n                && isNaN(expression[expression.length - 1])\r\n                ) {\r\n                    console.log(expression)\r\n                    expression = expression.substr(0, expression.length - 1);\r\n            }\r\n        }\r\n        if(char === '.') {\r\n            if(expression[expression.length - 1] === '.') return;\r\n            const reverseExpArr = expression.split('').reverse();\r\n            const index = reverseExpArr.findIndex(isNaN);\r\n            if(reverseExpArr[index] === '.') return;\r\n        }\r\n\r\n        expression = this.cleanZeros(expression + char);\r\n        const answer = this.cleanZeros(this.state.answer + char);\r\n\r\n        if(char !== '.' && isNaN(char)) {\r\n            \r\n            this.setState({ expression, answer: '' });\r\n            return;\r\n        }\r\n\r\n        this.setState({ expression, answer })\r\n    }\r\n    calculate = () => {\r\n        if(this.state.expression.length === 0) return;\r\n        this.setState({ expression: eval(this.state.expression).toString(), answer: eval(this.state.expression).toString() });\r\n    }\r\n\r\n    cleanZeros = str => str.replace(/^0+(\\d)/, '$1');\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calc-container calc-grid\">\r\n                <div id=\"display-container\">\r\n                    <div id=\"exp\">{this.state.expression || '0'}</div>\r\n                    <div id=\"display\">{this.state.answer || '0'}</div>\r\n                </div>\r\n                <Button id=\"clear\" value=\"AC\" onClick={this.display} />\r\n                <Button id=\"divide\" className=\"oper\" value=\"/\" onClick={this.display} />\r\n                <Button id=\"multiply\" className=\"oper\" value=\"*\" onClick={this.display} />\r\n                {[7, 8, 9].map((num, i) => <Button id={numsToWords.toWords(num)} value={num} key={num} onClick={this.display} />)}\r\n                <Button id=\"subtract\" className=\"oper\" value=\"-\" onClick={this.display} />\r\n                {[4, 5, 6].map((num, i) => <Button id={numsToWords.toWords(num)} value={num} key={num} onClick={this.display} />)}\r\n                <Button id=\"add\" className=\"oper\" value=\"+\" onClick={this.display} />\r\n                {[1, 2, 3].map((num, i) => <Button id={numsToWords.toWords(num)} value={num} key={num} onClick={this.display} />)}\r\n                <Button id=\"equals\" value=\"=\" onClick={this.calculate} />\r\n                <Button id={numsToWords.toWords(0)} value={0} key={0} onClick={this.display} />\r\n                <Button id=\"decimal\" value=\".\" onClick={this.display} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from \"react\";\r\nimport Calculator from \"../Calculator\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Calculator />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Main;","import React from \"react\";\r\nimport Main from './components/main/Main.js';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Main />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './App';\r\n\r\nimport \"./components/main/common.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}